{"version":3,"file":"static/js/839.842a3795.chunk.js","mappings":"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","sources":["views/RegisterView/RegisterView.styled.ts","views/RegisterView/RegisterView.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 25px;\r\n`;\r\n\r\nexport const FormWrapper = styled.form`\r\n  @media screen and (min-width: 768px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n","import { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { TextField, Button, Typography, Paper, Box, Grid } from '@mui/material';\r\nimport { useRegisterMutation } from '../../redux/authAPI';\r\nimport { Container, FormWrapper } from './RegisterView.styled';\r\n\r\ninterface SubmitValues {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default function RegisterView() {\r\n  const [registerUser, { isSuccess }] = useRegisterMutation();\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required('Fullname is required'),\r\n    email: yup.string().required('Email is required').email('Email is invalid'),\r\n    password: yup\r\n      .string()\r\n      .required('Password is required')\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .max(40, 'Password must not exceed 40 characters'),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    resetField,\r\n    formState: { errors },\r\n  } = useForm<SubmitValues>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const onSubmit = async (data: SubmitValues) => {\r\n    await registerUser(data);\r\n    resetField('name');\r\n    resetField('email');\r\n    resetField('password');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FormWrapper onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            margin: 3,\r\n            width: 'auto',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: 'auto',\r\n            }}\r\n            px={3}\r\n            py={2}\r\n          >\r\n            <Grid>\r\n              <Grid item xs={5} sm={5}>\r\n                <TextField\r\n                  required\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register('name')}\r\n                  error={errors.name ? true : false}\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.name?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={5} sm={5}>\r\n                <TextField\r\n                  required\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register('email')}\r\n                  error={errors.email ? true : false}\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.email?.message}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={5} sm={5}>\r\n                <TextField\r\n                  required\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register('password')}\r\n                  error={errors.password ? true : false}\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.password?.message}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box mt={3}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n      </FormWrapper>\r\n      {isSuccess && <Navigate to=\"/login\" />}\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","FormWrapper","_templateObject2","RegisterView","_errors$name","_errors$email","_errors$password","_useRegisterMutation","useRegisterMutation","_useRegisterMutation2","_slicedToArray","registerUser","isSuccess","validationSchema","yup","shape","name","required","email","password","min","max","_useForm","useForm","resolver","yupResolver","register","handleSubmit","resetField","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","stop","_x","apply","arguments","_jsxs","children","_jsx","Paper","elevation","sx","margin","width","Box","px","py","Grid","item","xs","sm","TextField","_objectSpread","id","label","size","fullWidth","error","Typography","variant","color","message","type","mt","Button","Navigate","to"],"sourceRoot":""}