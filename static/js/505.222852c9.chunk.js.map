{"version":3,"file":"static/js/505.222852c9.chunk.js","mappings":"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","sources":["Components/ContactForm/ContactForm.styled.ts","Components/Loader/Loader.styled.ts","Components/Loader/Loader.tsx","Components/ContactForm/ContactForm.tsx","Components/ContactList/ContactList.styled.ts","Components/ContactListItem/ContactListItem.styled.ts","Components/ContactListItem/ContactListItem.tsx","Components/ContactList/ContactList.tsx","Components/Filter/Filter.styled.ts","Components/Filter/Filter.tsx","views/ContactsView/ContactsView.styled.ts","views/ContactsView/ContactsView.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Box } from '@mui/material';\r\n\r\nexport const FormWrapper = styled.form`\r\n  border-radius: 4px;\r\n  @media screen and (min-width: 780px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const AddContactTitle = styled.h2`\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const ButtonContainer = styled(Box)<{ type: string }>`\r\n  display: flex;\r\n\r\n  justify-content: ${({ type }) =>\r\n    type === 'update' ? 'space-between' : 'start'};\r\n  margin-top: 10px;\r\n  margin-left: ${({ type }) => (type === 'update' ? '15px' : '0')};\r\n  margin-right: 15px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const LoaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { ThreeCircles } from 'react-loader-spinner';\r\nimport { LoaderContainer } from './Loader.styled';\r\n\r\ninterface LoaderProps {\r\n  color: string;\r\n  height: string;\r\n  width: string;\r\n}\r\n\r\nexport const Loader = ({ color, height, width }: LoaderProps) => {\r\n  return (\r\n    <LoaderContainer>\r\n      <ThreeCircles color={color} height={height} width={width} />\r\n    </LoaderContainer>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { TextField, Button, Typography, Paper, Box, Grid } from '@mui/material';\r\nimport { toast } from 'react-hot-toast';\r\nimport { FormWrapper, ButtonContainer } from './ContactForm.styled';\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactQuery,\r\n  useUpdateContactMutation,\r\n  useDeleteContactMutation,\r\n} from '../../redux/contactsAPI';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\ninterface SubmitValues {\r\n  id?: string;\r\n  name?: string;\r\n  number?: string;\r\n}\r\n\r\ninterface ContactFormProp {\r\n  id?: string;\r\n  type: string;\r\n  itemData?: SubmitValues;\r\n  closeModal?: () => void;\r\n}\r\n\r\nconst defaultInputValues = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport const ContactForm = ({\r\n  id,\r\n  type,\r\n  itemData,\r\n  closeModal,\r\n}: ContactFormProp) => {\r\n  const [values, setValues] = useState(\r\n    type === 'add' ? defaultInputValues : itemData\r\n  );\r\n  const { data } = useGetContactQuery('');\r\n  const [addContact, { isLoading: adding }] = useAddContactMutation();\r\n  const [updateContact, { isLoading: updating }] = useUpdateContactMutation();\r\n  const [deleteContact, { isLoading: deleting }] = useDeleteContactMutation();\r\n\r\n  const isLoading = adding || updating || deleting;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    number: yup\r\n      .string()\r\n      .required('This field is Required')\r\n      .matches(\r\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n        'Phone number is not valid'\r\n      ),\r\n  });\r\n\r\n  const addMyContact = async (value: SubmitValues) => {\r\n    for (const contact of data?.result) {\r\n      if (contact.name === value.name) {\r\n        toast.error(`${value.name} is already in contacts.`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    await addContact(value);\r\n    toast.success(`Contact ${value.name} has been added`);\r\n  };\r\n\r\n  const updateMyContact = async (value: SubmitValues) => {\r\n    await updateContact(value);\r\n    toast.success(`Contact ${data.name} has been updated`);\r\n  };\r\n\r\n  const deleteMyContact = async (id: string | undefined) => {\r\n    await deleteContact(id);\r\n    toast.success(`Contact ${data.name} has been deleted`);\r\n  };\r\n\r\n  const handleChange = (value: SubmitValues) => {\r\n    setValues(value);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<SubmitValues>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const onSubmit = async (data: SubmitValues) => {\r\n    type === 'add'\r\n      ? await addMyContact(data)\r\n      : await updateMyContact({ id, ...data });\r\n    closeModal?.();\r\n    setValues(defaultInputValues);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormWrapper onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            width: 'auto',\r\n            boxShadow: '3px 3px 5px 0px rgba(25, 118, 210, 1)',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: 'auto',\r\n            }}\r\n            px={3}\r\n            py={2}\r\n          >\r\n            <Grid>\r\n              <Grid item xs={5} sm={5}>\r\n                <TextField\r\n                  required\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register('name')}\r\n                  error={errors.name ? true : false}\r\n                  value={values?.name}\r\n                  onChange={event =>\r\n                    handleChange({ ...values, name: event.target.value })\r\n                  }\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.name?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={5} sm={5}>\r\n                <TextField\r\n                  required\r\n                  id=\"number\"\r\n                  label=\"Number\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register('number')}\r\n                  error={errors.number ? true : false}\r\n                  value={values?.number}\r\n                  onChange={event =>\r\n                    handleChange({ ...values, number: event.target.value })\r\n                  }\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.number?.message}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <ButtonContainer type={type}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={adding || updating || deleting}\r\n                size=\"small\"\r\n              >\r\n                {type === 'add' ? 'Add' : 'Update'}\r\n              </Button>\r\n              {type === 'update' && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  onClick={() => deleteMyContact(id)}\r\n                  disabled={adding || updating || deleting}\r\n                  size=\"small\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )}\r\n            </ButtonContainer>\r\n          </Box>\r\n        </Paper>\r\n      </FormWrapper>\r\n      {isLoading && <Loader color=\"#2196f3\" width=\"100\" height=\"100\" />}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  padding-left: 0;\r\n  list-style: none;\r\n  margin-top: 25px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 500px;\r\n  }\r\n`;\r\n\r\nexport const ItemContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const NameContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 80%;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  margin: 0;\r\n`;\r\n","import { useState } from 'react';\r\nimport { Dialog } from '@mui/material';\r\nimport { ContactForm } from '../ContactForm';\r\nimport {\r\n  Item,\r\n  NameContainer,\r\n  ItemContainer,\r\n  Name,\r\n} from './ContactListItem.styled';\r\n\r\ninterface Contact {\r\n  _id: string;\r\n  name: string;\r\n  number: string;\r\n}\r\n\r\nexport const ContactListItem = ({ _id, name, number }: Contact) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Item>\r\n      <div onClick={handleClickOpen}>\r\n        <ItemContainer>\r\n          <NameContainer>\r\n            <Name>{name}</Name>\r\n            <Name>{number}</Name>\r\n          </NameContainer>\r\n        </ItemContainer>\r\n      </div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <ContactForm\r\n          type=\"update\"\r\n          itemData={{ name, number }}\r\n          id={_id}\r\n          closeModal={handleClose}\r\n        />\r\n      </Dialog>\r\n    </Item>\r\n  );\r\n};\r\n","import { List } from './ContactList.styled';\r\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\r\n\r\ninterface Contact {\r\n  _id: string;\r\n  name: string;\r\n  number: string;\r\n}\r\n\r\ninterface Prop {\r\n  items: Contact[];\r\n}\r\n\r\nexport const ContactList = ({ items }: Prop) => {\r\n  return (\r\n    <>\r\n      {items && (\r\n        <List>\r\n          {items.map(contact => (\r\n            <ContactListItem key={contact._id} {...contact} />\r\n          ))}\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: inline-block;\r\n  border-radius: 4px;\r\n  box-shadow: 3px 3px 5px 0px rgba(25, 118, 210, 1);\r\n`;\r\n","import { TextField } from '@mui/material';\r\nimport { Container } from './Filter.styled';\r\n\r\ninterface FilterProps {\r\n  value: string;\r\n  onChange: (name: string) => void;\r\n}\r\n\r\nexport const Filter = ({ value, onChange }: FilterProps) => {\r\n  return (\r\n    <Container>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Find contact by name\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => onChange(e.target.value)}\r\n        value={value}\r\n        autoComplete=\"off\"\r\n        size=\"small\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 25px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n\r\n  @media screen and (min-width: 780px) {\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n  }\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  margin-bottom: 26px;\r\n  @media screen and (max-width: 779px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const ContactListTitle = styled.h2`\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { ContactForm } from '../../Components/ContactForm';\r\nimport { ContactList } from '../../Components/ContactList';\r\nimport { Filter } from '../../Components/Filter/Filter';\r\nimport { useGetContactQuery } from '../../redux/contactsAPI';\r\nimport {\r\n  Container,\r\n  HeaderTitle,\r\n  ContactListTitle,\r\n} from './ContactsView.styled';\r\nimport { Loader } from '../../Components/Loader/Loader';\r\n\r\nexport default function ContactsView() {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const { data, isLoading } = useGetContactQuery('');\r\n\r\n  const changeFilter = (name: string): void => {\r\n    setFilter(name);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter: string = filter.toLowerCase();\r\n    if (data?.result) {\r\n      return data?.result.filter((item: { name: string }) =>\r\n        item.name.toLowerCase().includes(normalizedFilter)\r\n      );\r\n    }\r\n  };\r\n  const visibleContacts = getVisibleContacts();\r\n\r\n  return (\r\n    <Container>\r\n      <>\r\n        <HeaderTitle>Phonebook</HeaderTitle>\r\n        <ContactListTitle>Add new contact</ContactListTitle>\r\n        <ContactForm type=\"add\" />\r\n\r\n        <ContactListTitle>Contacts</ContactListTitle>\r\n        <Filter value={filter} onChange={changeFilter} />\r\n\r\n        <ContactList items={visibleContacts} />\r\n      </>\r\n      {isLoading && <Loader color=\"#2196f3\" width=\"100\" height=\"100\" />}\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["FormWrapper","styled","_templateObject","_taggedTemplateLiteral","ButtonContainer","_templateObject2","Box","_templateObject3","_ref","type","_ref2","LoaderContainer","Loader","color","height","width","_jsx","children","ThreeCircles","defaultInputValues","name","number","ContactForm","_errors$name","_errors$number","id","itemData","closeModal","_useState","useState","_useState2","_slicedToArray","values","setValues","data","useGetContactQuery","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","addContact","adding","isLoading","_useUpdateContactMuta","useUpdateContactMutation","_useUpdateContactMuta2","updateContact","updating","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","deleting","validationSchema","yup","shape","required","matches","addMyContact","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","_iterator","_step","wrap","_context","prev","next","_createForOfIteratorHelper","result","s","n","done","toast","concat","abrupt","t0","e","f","finish","stop","_x","apply","arguments","updateMyContact","_ref3","_callee2","_context2","_x2","deleteMyContact","_ref4","_callee3","_context3","_x3","handleChange","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","_ref5","_callee4","_context4","_objectSpread","_x4","_jsxs","_Fragment","Paper","elevation","sx","boxShadow","px","py","Grid","item","xs","sm","TextField","label","size","fullWidth","margin","error","onChange","event","target","Typography","variant","message","Button","disabled","onClick","List","Item","ItemContainer","NameContainer","Name","_templateObject4","ContactListItem","_id","open","setOpen","handleClose","Dialog","onClose","ContactList","items","map","contact","Container","Filter","autoComplete","HeaderTitle","ContactListTitle","ContactsView","filter","setFilter","_useGetContactQuery","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}