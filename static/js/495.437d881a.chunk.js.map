{"version":3,"file":"static/js/495.437d881a.chunk.js","mappings":"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","sources":["Components/ContactForm/ContactForm.styled.ts","Components/ContactForm/ContactForm.tsx","Components/ContactList/ContactList.styled.ts","Components/ContactListItem/ContactListItem.styled.ts","Components/ContactListItem/ContactListItem.tsx","Components/ContactList/ContactList.tsx","Components/Filter/Filter.styled.ts","Components/Filter/Filter.tsx","views/ContactsView/ContactsView.styled.ts","views/ContactsView/ContactsView.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FormWrapper = styled.form`\r\n  width: 450px;\r\n`;\r\n","import { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { TextField, Button, Typography, Paper, Box, Grid } from '@mui/material';\r\nimport { FormWrapper } from './ContactForm.styled';\r\n\r\ninterface SubmitValues {\r\n  name: string;\r\n  number: string;\r\n}\r\n\r\ninterface ContactFormProp {\r\n  addContact: (data: SubmitValues) => void;\r\n  loading: boolean;\r\n}\r\n\r\nexport const ContactForm = ({ addContact, loading }: ContactFormProp) => {\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    number: yup\r\n      .string()\r\n      .required('This field is Required')\r\n      .matches(\r\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n        'Phone number is not valid'\r\n      ),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    resetField,\r\n    formState: { errors },\r\n  } = useForm<SubmitValues>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const onSubmit = async (data: SubmitValues) => {\r\n    await addContact(data);\r\n    resetField('name');\r\n    resetField('number');\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={handleSubmit(onSubmit)}>\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          width: 'auto',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: 'auto',\r\n          }}\r\n          px={3}\r\n          py={2}\r\n        >\r\n          <Grid>\r\n            <Grid item xs={5} sm={5}>\r\n              <TextField\r\n                required\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                size=\"small\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('name')}\r\n                error={errors.name ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.name?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={5} sm={5}>\r\n              <TextField\r\n                required\r\n                id=\"number\"\r\n                label=\"Number\"\r\n                size=\"small\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('number')}\r\n                error={errors.number ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.number?.message}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box mt={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              size=\"small\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </FormWrapper>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  padding-left: 0;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  width: 500px;\r\n  font-size: 20px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const ItemContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const NameContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 80%;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  margin: 0;\r\n`;\r\n","import { RotatingLines } from 'react-loader-spinner';\r\nimport { Button } from '@mui/material';\r\nimport {\r\n  Item,\r\n  NameContainer,\r\n  ItemContainer,\r\n  Name,\r\n} from './ContactListItem.styled';\r\nimport { useDeleteContactMutation } from '../../redux/contactsAPI';\r\n\r\ninterface Contact {\r\n  id: number;\r\n  name: string;\r\n  number: string;\r\n}\r\n\r\nexport const ContactListItem = ({ id, name, number }: Contact) => {\r\n  const [deleteContacts, { isLoading: isDeleting }] =\r\n    useDeleteContactMutation();\r\n\r\n  return (\r\n    <Item>\r\n      <ItemContainer>\r\n        <NameContainer>\r\n          <Name>{name}</Name>\r\n          <Name>{number}</Name>\r\n        </NameContainer>\r\n        <Button\r\n          variant=\"outlined\"\r\n          type=\"button\"\r\n          disabled={isDeleting}\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => deleteContacts(id)}\r\n        >\r\n          {isDeleting && <RotatingLines width=\"10\" />} Delete\r\n        </Button>\r\n      </ItemContainer>\r\n    </Item>\r\n  );\r\n};\r\n","import { List } from './ContactList.styled';\r\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\r\n\r\ninterface Contact {\r\n  id: number;\r\n  name: string;\r\n  number: string;\r\n}\r\n\r\ninterface Prop {\r\n  items: Contact[];\r\n}\r\n\r\nexport const ContactList = ({ items }: Prop) => {\r\n  return (\r\n    <>\r\n      {items && (\r\n        <List>\r\n          {items.map((contact) => (\r\n            <ContactListItem key={contact.id} {...contact} />\r\n          ))}\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 450px;\r\n`;\r\n","import { TextField } from '@mui/material';\r\nimport { Container } from './Filter.styled';\r\n\r\ninterface FilterProps {\r\n  value: string;\r\n  onChange: (name: string) => void;\r\n}\r\n\r\nexport const Filter = ({ value, onChange }: FilterProps) => {\r\n  return (\r\n    <Container>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Find contact by name\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => onChange(e.target.value)}\r\n        value={value}\r\n        autoComplete=\"off\"\r\n        size=\"small\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 25px;\r\n`;\r\n","import toast, { Toaster } from 'react-hot-toast';\r\nimport { InfinitySpin } from 'react-loader-spinner';\r\nimport { useState } from 'react';\r\nimport { ContactForm } from '../../Components/ContactForm';\r\nimport { ContactList } from '../../Components/ContactList';\r\nimport { Filter } from '../../Components/Filter/Filter';\r\nimport { useGetContactQuery } from '../../redux/contactsAPI';\r\nimport { useAddContactMutation } from '../../redux/contactsAPI';\r\nimport { Container } from './ContactsView.styled';\r\n\r\ninterface SubmitValues {\r\n  name: string;\r\n  number: string;\r\n}\r\n\r\nexport default function ContactsView() {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const { data: contacts, isLoading } = useGetContactQuery('');\r\n  const [addContact, { isLoading: loading }] = useAddContactMutation();\r\n\r\n  const addMyContact = (value: SubmitValues) => {\r\n    for (const contact of contacts) {\r\n      if (contact.name === value.name) {\r\n        toast.error(`${value.name} is already in contacts.`);\r\n        return;\r\n      }\r\n    }\r\n    addContact(value);\r\n    toast.success(`Contact ${value.name} has been added`);\r\n  };\r\n\r\n  const changeFilter = (name: string): void => {\r\n    setFilter(name);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter: string = filter.toLowerCase();\r\n    if (contacts) {\r\n      return contacts.filter((item: { name: string }) =>\r\n        item.name.toLowerCase().includes(normalizedFilter)\r\n      );\r\n    }\r\n  };\r\n  const visibleContacts = getVisibleContacts();\r\n\r\n  return (\r\n    <Container>\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={addMyContact} loading={loading} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={changeFilter} />\r\n        {isLoading ? (\r\n          <InfinitySpin color=\"grey\" />\r\n        ) : (\r\n          <ContactList items={visibleContacts} />\r\n        )}\r\n      </>\r\n\r\n      <Toaster />\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["FormWrapper","styled","_templateObject","_taggedTemplateLiteral","ContactForm","_ref","_errors$name","_errors$number","addContact","loading","validationSchema","yup","shape","name","required","number","matches","_useForm","useForm","resolver","yupResolver","register","handleSubmit","resetField","errors","formState","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","stop","_x","apply","arguments","_jsx","children","Paper","elevation","sx","width","_jsxs","Box","px","py","Grid","item","xs","sm","TextField","_objectSpread","id","label","size","fullWidth","margin","error","Typography","variant","color","message","mt","Button","type","disabled","List","Item","ItemContainer","_templateObject2","NameContainer","_templateObject3","Name","_templateObject4","ContactListItem","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","_slicedToArray","deleteContacts","isDeleting","isLoading","onClick","RotatingLines","ContactList","items","_Fragment","map","contact","Container","Filter","value","onChange","e","target","autoComplete","ContactsView","_useState","useState","_useState2","filter","setFilter","_useGetContactQuery","useGetContactQuery","contacts","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","_step","_iterator","_createForOfIteratorHelper","s","n","done","toast","concat","err","f","InfinitySpin","Toaster"],"sourceRoot":""}