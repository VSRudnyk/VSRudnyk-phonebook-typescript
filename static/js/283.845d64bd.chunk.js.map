{"version":3,"file":"static/js/283.845d64bd.chunk.js","mappings":"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","sources":["views/LoginView/LoginView.styled.ts","views/LoginView/LoginView.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport liginBackground from '../../images/login.png';\r\nimport flame from '../../images/flame.png';\r\n\r\nexport const Background = styled.div`\r\n  background-image: url(${liginBackground}), url(${flame});\r\n  background-repeat: no-repeat, no-repeat;\r\n  background-position: right 0px bottom 0px, left 0px top;\r\n  background-size: 90%;\r\n  @media screen and (min-width: 768px) {\r\n    background-size: 60%;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    background-size: 50%;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  height: 100vh;\r\n  padding: 0 15px;\r\n  @media screen and (min-width: 480px) {\r\n    width: 480px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 768px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 1280px;\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled.form`\r\n  padding-top: 150px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n","import { useLoginMutation } from '../../redux/authAPI';\r\nimport { TextField, Button, Typography, Paper, Box, Grid } from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { Background, Container, FormWrapper } from './LoginView.styled';\r\n\r\ninterface SubmitValues {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default function LoginView() {\r\n  const [logIn] = useLoginMutation();\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup.string().required('Email is required').email('Email is invalid'),\r\n    password: yup\r\n      .string()\r\n      .required('Password is required')\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .max(40, 'Password must not exceed 40 characters'),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    resetField,\r\n    formState: { errors },\r\n  } = useForm<SubmitValues>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const onSubmit = async (data: SubmitValues) => {\r\n    await logIn(data);\r\n    resetField('email');\r\n    resetField('password');\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <Container>\r\n        <FormWrapper onSubmit={handleSubmit(onSubmit)}>\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              width: 'auto',\r\n              boxShadow: '3px 3px 5px 0px rgba(25, 118, 210, 1)',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: 'auto',\r\n              }}\r\n              px={3}\r\n              py={2}\r\n            >\r\n              <Grid>\r\n                <Grid item xs={5} sm={5}>\r\n                  <TextField\r\n                    required\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register('email')}\r\n                    error={errors.email ? true : false}\r\n                  />\r\n                  <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                    {errors.email?.message}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={5} sm={5}>\r\n                  <TextField\r\n                    required\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register('password')}\r\n                    error={errors.password ? true : false}\r\n                  />\r\n                  <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                    {errors.password?.message}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Box mt={3}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                >\r\n                  Log in\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Paper>\r\n        </FormWrapper>\r\n      </Container>\r\n    </Background>\r\n  );\r\n}\r\n"],"names":["Background","styled","_templateObject","_taggedTemplateLiteral","liginBackground","flame","Container","_templateObject2","FormWrapper","_templateObject3","LoginView","_errors$email","_errors$password","_useLoginMutation","useLoginMutation","logIn","_slicedToArray","validationSchema","yup","shape","email","required","password","min","max","_useForm","useForm","resolver","yupResolver","register","handleSubmit","resetField","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","stop","_x","apply","arguments","_jsx","children","Paper","elevation","sx","width","boxShadow","_jsxs","Box","px","py","Grid","item","xs","sm","TextField","_objectSpread","id","label","size","fullWidth","margin","error","Typography","variant","color","message","type","mt","Button"],"sourceRoot":""}